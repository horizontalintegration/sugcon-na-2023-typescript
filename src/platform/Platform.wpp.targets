<?xml version="1.0" encoding="utf-8"?>

<!--
  A .wpp.targets file can be used to configure web application publishing.
  https://docs.microsoft.com/en-us/aspnet/web-forms/overview/deployment/advanced-enterprise-web-deployment/excluding-files-and-folders-from-deployment
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    Use the SitecoreAssemblies ItemGroup provided by the Sitecore.Assemblies.Platform
    package in order to prevent built-in Sitecore assemblies from publishing.
    https://doc.sitecore.com/developers/93/sitecore-experience-manager/en/sitecore-assembly-list-nuget-packages.html

    Delay executing this target until after Compile in order to
    ensure the NuGet package targets have been evaluated.
  -->
  <Target Name="ExcludeSitecoreAssemblies" AfterTargets="Compile">
    <ItemGroup>
      <ExcludeFromPackageFiles Include="@(SitecoreAssemblies -> 'bin\%(Filename)%(Extension)')" />
      <ExcludeFromPackageFiles Include="@(SitecoreAssemblies -> 'bin\%(Filename).pdb')" />
      <ExcludeFromPackageFiles Include="@(SitecoreAssemblies -> 'bin\%(Filename).xml')" />
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <!--Make sure the our prebuild runs regardless of whether project is out of date-->
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
  </PropertyGroup>
  <Target Name="DotNetToolRestore" BeforeTargets="PreBuildEvent">
    <!--<Exec WorkingDirectory="$(MSBuildProjectDirectory)/.." Command="dotnet tool restore" />-->
    <Exec Condition="'$(BuildingInsideVisualStudio)' == 'true'" WorkingDirectory="$(SolutionDir)/src" Command="dotnet tool restore" />
  </Target>
  <Target Name="LeprechaunSitecore" AfterTargets="DotNetToolRestore">
    <!--<Exec Command="dotnet leprechaun /c $(MSBuildProjectDirectory)/../leprechaun-dotnet.config" />-->
    <Exec Condition="'$(BuildingInsideVisualStudio)' == 'true'" Command="dotnet leprechaun /c $(SolutionDir)/src/leprechaun-dotnet.config" />
  </Target>
</Project>

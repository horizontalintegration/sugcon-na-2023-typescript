
/**
 * <auto-generated>
 *     This code was generated by a tool.
 *
 *     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * </auto-generated>
 */

// eslint-disable-next-line @typescript-eslint/no-unused-vars 
import { ItemExt } from '../lib/_.Sitecore.Override'
// eslint-disable-next-line @typescript-eslint/no-unused-vars 
import { Field, ImageField, FileField, LinkField } from '@sitecore-jss/sitecore-jss-nextjs';
// eslint-disable-next-line @typescript-eslint/no-unused-vars 
import { ComponentProps } from '../lib/component-props';
import { Foundation } from "./Foundation.Sugcon.model"

export namespace Feature.Sugcon.Listing.CardListing {
    export type CardItem =  {
        fields?: { 
            /**
            * Represents the CTA field (7a5b4674-7a28-42fe-8f8e-e86c5dcbd049).
            */
            cta?: LinkField;

            /**
            * Represents the Headline field (9cafa07d-4fdb-4741-90da-f7b1392458c8).
            */
            headline?: Field<string>;

            /**
            * Represents the Image field (af087590-b739-434a-b9c2-954bd816ae59).
            */
            image?: ImageField;
        }

    }
    export type CardListing = 
        Foundation.Sugcon.Utility.RenderWithChildren &  {
        fields?: { 
            /**
            * Represents the Headline field (639981f4-6eb4-4f0c-b309-50476ee79b3e).
            */
            headline?: Field<string>;
        }

    }
    export class CardListingParamsClass extends 
        Foundation.Sugcon.Base.BaseRenderingParamsClass {
            constructor(public params: Record<string, string>) {
                super(params);
            }
        
            /**
            * Represents the Cards Per Row field (e3688fd5-09ab-4913-963e-1d9d6ef7d86c).
            */
            public get cardsPerRow() {
                const value = this.params.cardsPerRow;
                if (!value) {
                    return null;
                }
                return parseInt(value);
            }

            /**
            * Represents the testDate field (2a1145ff-4e62-4569-89c4-3ab23029bd17).
            */
            public get testDate() {
                const value = this.params.testDate;
                if (!value) {
                    return null;
                }
                return new Date(value.substring(0, 4) 
    + '-' + value.substring(4, 6)
    + '-' + value.substring(6, 11)
    + ':' + value.substring(11, 13)
    + ':' + value.substring(13, 16));
            }

            /**
            * Represents the testImage field (afe4ec52-a73b-4b07-ba75-d52e3d9ee891).
            */
            public get testImage() {
                const value = this.params.testImage;
                if (!value) {
                    return null;
                }
                return value;
            }

    }
}
export namespace Feature.Sugcon.Listing.PageListing {
    export type PageListing =  {
        fields?: { 
            /**
            * Represents the Pages field (e74c3459-d157-4210-ad64-978d04a5fa3f).
            */
            pages?: ItemExt[];
        }

    }
}
// Namespace aliases.  If this doesn't work, ensure `"isolatedModules": false` is set in `tsconfig.json`. 
export import Listing = Feature.Sugcon.Listing;


